import logging
from telebot import types
from bot_instance import bot
import handlers.admin
import handlers.user
import database.contest
from database.contest import user_content_storage
from handlers.envParams import admin_ids
from menu.constants import ButtonCallback
from menu.menu import Menu

logging.basicConfig(
    filename="bot.log",
    format="%(asctime)s - %(name)s - %(levelname)s - %(message)s",
    level=logging.DEBUG,
)


# –ü–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è —Å—Ç–∞—Ä—Ç - –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤ —Å–ø–∏—Å–∫–µ –∞–¥–º–∏–Ω–æ–≤, –≤—ã–¥–∞—á–∞ –º–µ–Ω—é –∞–¥–º–∏–Ω–∞ –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.message_handler(commands=["start"])
def start(message):
    try:
        logger = logging.getLogger(__name__)
        logger.debug(f"Start command from user: {message.from_user.id}")

        # –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω—ã–π —Å–±—Ä–æ—Å —Å–æ—Å—Ç–æ—è–Ω–∏–π
        user_id = message.from_user.id
        bot.delete_state(user_id)
        user_content_storage.clear(user_id)

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞
        if message.from_user.id in admin_ids:
            logger.debug(f"Admin detected - {user_id}")
            main_menu = Menu.adm_menu()
            welcome_text = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä\! üëë"
        else:
            logger.debug(f"Regular user detected - {user_id}")
            main_menu = Menu.user_menu()
            welcome_text = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å\! üòä"

        bot.send_message(
            message.chat.id,
            f"‚ú® {welcome_text}\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
            parse_mode="MarkdownV2",
            reply_markup=main_menu,
        )

    except Exception as e:
        logger.error(f"Start command error: {str(e)}")
        bot.send_message(
            message.chat.id,
            "‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.",
            reply_markup=types.ReplyKeyboardRemove(),
        )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é" - –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤ —Å–ø–∏—Å–∫–µ –∞–¥–º–∏–Ω–æ–≤, –≤—ã–¥–∞—á–∞ –º–µ–Ω—é –∞–¥–º–∏–Ω–∞ –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.callback_query_handler(func=lambda call: call.data == ButtonCallback.MAIN_MENU)
def handle_back(call):
    logger = logging.getLogger(__name__)
    logger.debug(f"Received callback: {call.data}, chat_id: {call.message.chat.id}")
    if call.message.chat.id in admin_ids:
        main_menu = Menu.adm_menu()
    else:
        main_menu = Menu.user_menu()
    bot.edit_message_text(
        "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ::",
        call.message.chat.id,
        call.message.message_id,
        reply_markup=main_menu,
    )


if __name__ == "__main__":
    bot.infinity_polling(allowed_updates=["message", "callback_query"])
