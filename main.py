import os
import telebot
from dotenv import load_dotenv  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö

from constants import ButtonText
from menu import Menu

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
load_dotenv()

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
TOKEN = os.getenv("BOT_TOKEN")
if not TOKEN:
    raise ValueError("–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env!")

bot = telebot.TeleBot(TOKEN)

# –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤
admin_ids = list(map(int, os.getenv("ADMIN_ID_LIST", "").split(","))) if os.getenv("ADMIN_ID_LIST") else []


@bot.message_handler(commands=['start'])
def start(message):
    if message.chat.id in admin_ids:
        markup = Menu.adm_menu()
        welcome_text = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä! üëë"
    else:
        markup = Menu.user_menu()
        welcome_text = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å! üòä"

    bot.send_message(
        message.chat.id,
        welcome_text,
        reply_markup=markup
    )


@bot.message_handler(content_types=['text'])
def handler(message):
    if message.text == ButtonText.USER_GUIDES:
        bot.send_message(message.chat.id, "–¢—É—Ç –±—É–¥—É—Ç –≥–∞–π–¥—ã", reply_markup=Menu.guides_menu())
    if message.text == ButtonText.USER_CONTEST:
        bot.send_message(message.chat.id, "–¢—É—Ç –±—É–¥–µ—Ç –≤—Å—ë –æ –∫–æ–Ω–∫—É—Ä—Å–∞—Ö", reply_markup=Menu.contests_menu())
    if message.text == ButtonText.USER_MENU:
        bot.send_message(message.chat.id, "–í—ã –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é", reply_markup=Menu.user_menu())


def admin_required(func):
    def wrapper(message):
        if message.chat.id not in admin_ids:
            bot.reply_to(message, "üö´ –£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞!")
            return
        return func(message)
    return wrapper


@bot.message_handler(commands=['admin'])
@admin_required
def admin_panel(message):
    bot.send_message(message.chat.id, "–ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å:", reply_markup=Menu.adm_menu())


bot.polling(none_stop=True)
