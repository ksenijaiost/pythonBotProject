import os
import telebot
from dotenv import load_dotenv  # –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —Ñ—É–Ω–∫—Ü–∏—é –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö

from constants import ButtonText, ButtonCallback
from menu import Menu

# –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –∏–∑ .env
load_dotenv()

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω
TOKEN = os.getenv("BOT_TOKEN")
if not TOKEN:
    raise ValueError("–¢–æ–∫–µ–Ω –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ .env!")

bot = telebot.TeleBot(TOKEN)

# –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ –∞–¥–º–∏–Ω–æ–≤
admin_ids = list(map(int, os.getenv("ADMIN_ID_LIST", "").split(","))) if os.getenv("ADMIN_ID_LIST") else []


# –ü–æ—Å–ª–µ –Ω–∞–∂–∞—Ç–∏—è —Å—Ç–∞—Ä—Ç - –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤ —Å–ø–∏—Å–∫–µ –∞–¥–º–∏–Ω–æ–≤, –≤—ã–¥–∞—á–∞ –º–µ–Ω—é –∞–¥–º–∏–Ω–∞ –∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
@bot.message_handler(commands=['start'])
def start(message):
    if message.chat.id in admin_ids:
        main_menu = Menu.adm_menu()
        welcome_text = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä! üëë"
    else:
        main_menu = Menu.user_menu()
        welcome_text = "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! üòä"

    bot.send_message(
        message.chat.id,
        f"‚ú® {welcome_text}\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        parse_mode="Markdown",
        reply_markup=main_menu
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–í –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é"
@bot.callback_query_handler(func=lambda call: call.data == ButtonCallback.MAIN_MENU)
def handle_back(call):
    if call.message.chat.id in admin_ids:
        main_menu = Menu.adm_menu()
    else:
        main_menu = Menu.user_menu()
    bot.edit_message_text(
        "–ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ::",
        call.message.chat.id,
        call.message.message_id,
        reply_markup=main_menu
    )


# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–Ω–æ–ø–∫–∏ "–ì–∞–π–¥—ã"
@bot.callback_query_handler(func=lambda call: call.data == ButtonCallback.USER_GUIDES)
def handle_user_guides(call):
    bot.edit_message_text(
        "–ú–µ–Ω—é –≥–∞–π–¥–æ–≤. –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        call.message.chat.id,
        call.message.message_id,
        reply_markup=Menu.guides_menu()
    )


bot.polling(none_stop=True)
